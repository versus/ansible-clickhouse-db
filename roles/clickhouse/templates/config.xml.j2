<?xml version="1.0"?>
<yandex>
	<logger>
		<level>trace</level>
		<log>/var/log/clickhouse-server/clickhouse-server.log</log>
		<errorlog>/var/log/clickhouse-server/clickhouse-server.err.log</errorlog>
		<size>1000M</size>
		<count>10</count>
	</logger>


	<http_port>8123</http_port>
	<openSSL>
		<server>
			<!-- openssl req -subj "/CN=localhost" -new -newkey rsa:2048 -days 365 -nodes -x509 -keyout server.key -out server.crt -->
			<certificateFile>server.crt</certificateFile>
			<privateKeyFile>server.key</privateKeyFile>
			<!-- openssl dhparam -out dhparam.pem 4096 -->
			<dhParamsFile>dhparam.pem</dhParamsFile>
			<loadDefaultCAFile>true</loadDefaultCAFile>
			<cacheSessions>true</cacheSessions>
			<disableProtocols>sslv2,sslv3</disableProtocols>
			<preferServerCiphers>true</preferServerCiphers>
		</server>
		<client>
			<loadDefaultCAFile>true</loadDefaultCAFile>
			<cacheSessions>true</cacheSessions>
			<disableProtocols>sslv2,sslv3</disableProtocols>
			<preferServerCiphers>true</preferServerCiphers>
			<!-- Use for self-signed: <verificationMode>none</verificationMode> -->
			<invalidCertificateHandler>
				<!-- Use for self-signed: <name>AcceptCertificateHandler</name> -->
				<name>RejectCertificateHandler</name>
			</invalidCertificateHandler>
		</client>
	</openSSL>

	<tcp_port>9000</tcp_port>
	<interserver_http_port>9009</interserver_http_port>
	<listen_host>0.0.0.0</listen_host>

	<max_connections>4096</max_connections>
	<keep_alive_timeout>3</keep_alive_timeout>

	<!-- Maximum number of concurrent queries. -->
	<max_concurrent_queries>100</max_concurrent_queries>
	<uncompressed_cache_size>8589934592</uncompressed_cache_size>
	<mark_cache_size>5368709120</mark_cache_size>


	<!-- Path to data directory, with trailing slash. -->
	<path>/data/clickhouse/</path>

	<!-- Path to temporary data for processing hard queries. -->
	<tmp_path>/data/clickhouse/tmp/</tmp_path>

	<!-- Path to configuration file with users, access rights, profiles of settings, quotas. -->
	<users_config>users.xml</users_config>

	<!-- Default profile of settings.. -->
	<default_profile>default</default_profile>

	<!-- Default database. -->
	<default_database>default</default_database>
	<timezone>Europe/Kiev</timezone>

	<macros incl="macros" optional="true" />


	<!-- Reloading interval for embedded dictionaries, in seconds. Default: 3600. -->
	<builtin_dictionaries_reload_interval>3600</builtin_dictionaries_reload_interval>


	<!-- Sending data to Graphite for monitoring. -->
	<use_graphite>false</use_graphite>

	<!-- Uncomment if use_graphite.
	<graphite>
		<host>localhost</host>
		<port>42000</port>
		<root_path>one_min</root_path>
		<timeout>0.1</timeout>
	</graphite>
	-->


	<!-- Query log. Used only for queries with setting log_queries = 1. -->
	<query_log>
		<!-- What table to insert data. If table is not exist, it will be created.
		     When query log structure is changed after system update,
		      then old table will be renamed and new table will be created automatically.
		-->
		<database>system</database>
		<table>query_log</table>

		<!-- Interval of flushing data. -->
		<flush_interval_milliseconds>7500</flush_interval_milliseconds>
	</query_log>

	<dictionaries_config>*_dictionary.xml</dictionaries_config>

	<!-- Uncomment if you want data to be compressed 30-100% better.
		 Don't do that if you just started using ClickHouse.
	  -->
	<compression incl="clickhouse_compression">

	</compression>

	<resharding>
		<task_queue_path>/clickhouse/task_queue</task_queue_path>
	</resharding>

	<graphite_rollup_example>
		<pattern>
			<regexp>click_cost</regexp>
			<function>any</function>
			<retention>
				<age>0</age>
				<precision>3600</precision>
			</retention>
			<retention>
				<age>86400</age>
				<precision>60</precision>
			</retention>
		</pattern>
		<default>
			<function>max</function>
			<retention>
				<age>0</age>
				<precision>60</precision>
			</retention>
			<retention>
				<age>3600</age>
				<precision>300</precision>
			</retention>
			<retention>
				<age>86400</age>
				<precision>3600</precision>
			</retention>
		</default>
	</graphite_rollup_example>

<zookeeper>
	{% for server in zookeeper_hosts %}
	<node index="{{ loop.index }}">
		<host>{{ server.host }}</host>
		<port>2181</port>
	</node>
	{% endfor %}
</zookeeper>

<remote_servers>
	<{{ clickhouse_cluster.name }}>

			{% for shard in clickhouse_cluster.shards %}
			<shard>
			<weight>1</weight>
			<internal_replication>false</internal_replication>
			{% for replica in shard.replicas %}
			<replica>
				<host>{{ replica.host}}</host>
				<port>{{ replica.port}}</port>
				<password>{{ clickhouse_user_password }}</password>
			</replica>
			{% endfor %}
		</shard>
		{% endfor %}
	</{{ clickhouse_cluster.name }}>
</remote_servers>

</yandex>
